<!doctype linuxdoc system>
<article>

   <!-- Title, abstract, and TOC -->

   <title> ART tools HOWTO </title>
   <author> Mathieu Olivier  <tt>&lt;elric@mcm.net&gt;</tt> </author>
   <date>v0.0.1, October 25, 2000 </date>
   <abstract>
      This document aims to describe how to use the ReBUILD project's tools
      related to ART files. It is structured as a Linux Documentation Project's
      HOWTO, but is unrelated to it.
   </abstract>
   <toc>
   
   <!-- Introduction -->

   <sect> Introduction <p>
      BUILD is a 3D engine written by Kenneth Silverman and used by several
      well known computer games (Duke Nukem 3D, Blood, ...). This engine uses a
      particular file format to store its tiles and animations: the ART format.
      The ART tools are programs that allow you to read, create and modify such
      files.<p>
      Currently, the ART tools are only composed by 2 binaries: Art2Tga and
      Tga2Art. The idea behind them is that it's easier to extract tiles from an
      ART file, modify them with some painting software, and then convert them
      back into an ART file, than to just use the old "EditArt" DOS program.
   </sect>

   <!-- Art2Tga -->

   <sect> Art2Tga <p>
      Syntax: <tt>art2tga &lt;<em>ART file name</em>&gt;</tt> <p>
      Art2Tga is the utility which extracts tiles from an ART file. It puts
      them in TGA files named "tilesXXXX.tga" where "XXXX" is the internal ART
      index of the tile. Generated pictures are uncompressed and color-mapped
      (256 colors) TGA files. Unfortunately, their color palette is not included
      in the ART file, so you need to have the proper "palette.dat" file in the
      current directory in order to extract them. The palette for "Blood" can be
      found on <url url="http://www.geocities.com/frightfan/"
      name="the ReBUILD Project home page">, and the one for "Duke Nukem 3D"
      on <url url="http://mapfaq.3dportal.com/"
      name="the Group File Studio home page">. <p>
      Art2Tga also produces a plain text file (<tt>anidata.ini</tt>) which
      contains the animation data for each tile of the ART file. You can find in
      this text informations related to the speed or the type of an animation
      for example. The whole format of this INI file is a little bit complicated
      and will be described <ref id="animdata.ini" name="later">.
   </sect>

   <!-- Tga2Art -->

   <sect> Tga2Art <p>
      Syntax: <tt>tga2art &lt;<em>ART file</em>&gt; &lt;<em>Number of the first
      tile</em>&gt; &lt;<em>Number of the last tile</em>&gt;</tt> <p>
      Tga2Art is the utility which allows you to merge several TGA files into
      one single large ART file. It uses an "<tt>animdata.ini</tt>" file to set
      the tile animation flags and values. You would probably use the
      "<tt>animation.ini</tt>" generated by Art2Tga as a working basis.<p>
      Be aware that for now Tga2Art does a simple byte-to-byte comparison for
      verifying the validity of a TGA header; so, for the moment, it only
      accepts the TGA format used by Art2Tga. That's why I strongly recommend to
      use TGA files generated by Art2Tga as a working basis until we write a
      smarter TGA header parser. Moreover, Tga2Art takes the color palette of
      the first TGA file as a reference, so each TGA file must have the same
      palette or be rejected for the merge. Tga2Art does not generate a
      "<tt>palette.dat</tt>" file, or compare the TGA color palette with such a
      file, but it is something that we may implement later.
   </sect>

   <!-- An example with Monolith's Blood -->

   <sect> An example with Monolith's Blood<p>
      Let's make a little modification in Blood.<p>
      Create a new subdirectory under the Blood directory (call it "Mod" for
      example; so on my computer, I have "<tt>d:\Blood\Mod</tt>"). Copy a Blood
      ART file in it (I choosed <tt>tiles008.art</tt> because it was the
      smallest). Then add Art2Tga and Tga2Art binaries, and the "palette.dat"
      file for Blood.<p>
      Open a DOS console and go to the newly created directory (on my computer:
      "<tt>d:&lt;<em>ENTER</em>&gt; cd \Blood\Mod:&lt;<em>ENTER</em>&gt;</tt>").
      Then, unpack the tiles: "<tt>art2tga tiles008.art&lt;<em>ENTER</em>&gt;
      </tt>". A lot of TGA files should appear (from <tt>tile2048.tga</tt> to
      <tt>tile2303.tga</tt>) beside a text file (<tt>animdata.ini</tt>). You
      may notice that some TGA files are missing (<tt>tile2273.tga</tt> in my
      example); this is probably because these tiles are declared as empty (0 x
      0) in the ART file, and Art2Tga does not create empty pictures.<p>
      Open a TGA file of your choice, play with it (add some symbols, change
      some colors, ...), and save it. <bf>DO NOT</bf> modify its name or its
      color palette, or Tga2Art wouldn't be able to merge it with the other
      TGAs. Changing its height or its width may also be a problem, because
      the picture may be rendered at an invalid position into the game. This
      could hopefully be fixed later by modifying the animation data.<p>
      Let's merge all this pictures: "<tt>tga2art tiles008.art 2048 2303&lt;<em>
      ENTER</em>&gt;</tt>". You should now have a new <tt>tiles008.art</tt>
      in the current directory, containing your modified picture(s). All you
      have to do now is to create a backup of the original ART file, and to
      put the modified one in the Blood directory.
   </sect>

   <!-- Using "animdata.ini" -->

   <sect> Using "animdata.ini" <label id="animdata.ini"> <p>
      <sect1> The contents <p>
         Basically, <tt>animdata.ini</tt> contains 2 types of informations:
         tile data and animation data.<p>
         The tile data is: X and Y center offset, and "other flags". I'm unsure
         about the utility of the center offset, but I think it is used to shift
         the picture before rendering. It's useful for an animation: you attach
         it to one point only and the "center offset" of each tile shifts the
         rendering to fit its moving. The "other flags" is normally unused
         flags, but some games may use it, so they are also saved.<p>
         The animation data is: the length, the type, and the speed of the
         animation. The length is a number of pictures; the type can be "none",
         "oscillation", "forward", or "backward". The third information is not
         exactly a speed. It's computed as: <tt>frame_number = (totalclock /
         2^speed)</tt>, so a 'speed' of 2 means 30 frames/sec  (30 = 120 / 2^2)
         because BUILD's clock run at 120 Hz (120 ticks/sec).
      </sect1>

      <sect1> The format <p>
         As you might have guessed, <tt>animdata.ini</tt> format is the same as
         classic INI files. It contains sections, which contain key / value
         pairs. Let's take an example to see which sections and keys can be
         found in our case. The following lines are extracted from the <tt>
         animdata.ini</tt> corresponding to Blood's <tt>TILES008.ART</tt>.
         <tscreen><verb>
[tile2228.tga]
   XCenterOffset=0
   YCenterOffset=0
   OtherFlags=8

[tile2274.tga -> tile2275.tga]
   AnimationType=forward
   AnimationSpeed=6

[tile2274.tga]
   XCenterOffset=0
   YCenterOffset=10
   OtherFlags=0
         </verb></tscreen>

         The names of the keys are self-explaining. The only little difficulty
         is to understand the sections. If the section's name contains only one
         TGA file name, it's a tile data section. If it contains 2 names
         separated by an arrow ('->'), it's an animation data section.<p>
         Be aware that if a tile has an animation speed, <tt>animdata.ini</tt>
         must contain a section which stores this speed value, even if the tile
         is not part of an animation. In this case, the section name will be
         <tt>[tileXXXX.tga -> tileXXXX.tga]</tt>, where both <tt>XXXX</tt> are
         the same.
      </sect1>
   </sect>

   <!-- Links -->

   <sect> Links <label id="Links"> <p>
      <itemize>
         <item> <url url="http://www.geocities.com/frightfan/"
            name="The ReBUILD Project">: our home page<p>
         <item> <url url="http://www.icculus.org/BUILD/"
            name="The BUILD port for Linux">: the most advanced port of the
            BUILD engine to another OS.<p>
         <item> <url url="http://www.planetblood.com/bloodsource/"
            name="The Blood source campaign">: for the release of Blood source
            code.<p>
         <item> <url url="http://mapfaq.3dportal.com" name="Group File Studio">:
            a good GRP file viewer / modifier. <p>
      </itemize>
   </sect>

</article>
