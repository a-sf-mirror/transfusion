// Entities for Transfusion
//
// Authors: Jeff "Alastair" Dennis (jdennis97@home.com)
//          Tim "protoplasmatic" Hale (timothyhale@hotmail.com)
//          Dave "Darth Linux" Turner (darth_linux@planetblood.com)
//          Mathieu "Elric" Olivier (molivier@users.sourceforge.net)

//
// worldspawn
//

@SolidClass = worldspawn : "World entity"
[
	message(string) : "UNNAMED LEVEL\n by ANONYMOUS MAPPER\n  Made For Transfusion"
	worldtype(choices) : "Ambience" : 0 =
	[
		0 : "Medieval"
		1 : "Runic (metal)"
		2 : "Present (base)"
	]
	sounds(integer) : "CD track to play" : 1
	light(integer) : "100"
	_minlight_color(color255) : "Shadow Color(minlight)"
	_sunlight(integer) : "Sunlight brightness"
	_sun_mangle(string) : "Sunlight angle (yaw pitch 0)"
	_sunlight_color(color255) : "Sunlight Color"
]


//
// base marker definitions
//
@baseclass = Targetname [ targetname(target_source) : "Name" ]
@baseclass = Target [ target(target_destination) : "Target" ]
@baseclass = Usable
[
	spawnflags(flags) = [ 1024 : "Usable by player" : 1 ]
]


//
// Player starts, teleport, ...
//

@baseclass size(-16 -16 -24, 16 16 32) color(0 255 0) = PlayerClass []

@PointClass base(PlayerClass) = info_player_start : "Single player start" []
@PointClass base(PlayerClass) = info_player_coop : "Cooperative player start" []
@PointClass base(PlayerClass) = info_player_deathmatch : "Player deathmatch start" []
@PointClass base(PlayerClass) = info_player_team1 : "Red team base start" []
@PointClass base(PlayerClass) = info_player_team2 : "Blue team base start" []
@PointClass base(PlayerClass) = info_intermission : "Intermission camera" []
@PointClass base(PlayerClass, Targetname) = info_teleport_destination : "Teleport destination" []
@PointClass base(Targetname) = info_null : "info_null (spotlight target)" []
@PointClass base(Targetname) = info_notnull : "info_notnull (lighting target)" []

//
// CTF-only stuff
//

@baseclass size(-6 -7 -1, 6 49 75) = CTF_Flag []
@PointClass base(CTF_Flag) = item_flag_team1 : "CTF: Red Team Flag" []
@PointClass base(CTF_Flag) = item_flag_team2 : "CTF: Blue Team Flag" []
@SolidClass = func_ctf_wall : "Wall that only appears in CTF" []


//
// Lights, torches and flames
//

@baseclass size(-8 -8 -8, 8 8 8) = Light
[
	light(integer) : "Brightness" : 300
	_color(color255) : "RGB Color"
	style(choices) : "Behaviour" : 0 =
	[
		0 : "Normal"
		10: "Fluorescent flicker"
		2 : "Slow, strong pulse"
		11: "Slow pulse, noblack"
		5 : "Gentle pulse"
		1 : "Flicker A"
		6 : "Flicker B"
		3 : "Candle A"
		7 : "Candle B"
		8 : "Candle C"
		4 : "Fast strobe"
		9 : "Slow strobe"
		32: "Light is usable"
	]
	delay(Choices) : "Attenuation" : 0 =
	[
		0 : "Normal"
		1 : "1/x attenuation"
		2 : "1/x^2 attenuation"
		3 : "Full (no attenuation)"
	]
	wait(string) : "Fade distance factor"
	mangle(string) : "Spotlight angle (yaw pitch 0)"
]

@PointClass base(Light, Targetname) = light : "Invisible lightsource"
[
	spawnflags(flags) = [ 1 : "Initially dark" : 0 ]
]
@PointClass base(Light, Targetname) = light_fluoro : "Fluorescent light"
[
	spawnflags(Flags) = [ 1 : "Initially dark" : 0 ]
]
@PointClass base(Light) = light_fluorospark : "Sparking fluorescent light" []
@PointClass base(Light) = light_globe : "Globe light" []
@PointClass base(Light) size(-4 -4 -14, 4 4 30) = light_torch_small_walltorch : "Small walltorch" []

@baseclass base(Light) size(-10 -10 -12, 12 12 18) = Flame []
@PointClass base(Flame) = light_flame_large_yellow : "Large yellow flame" []
@PointClass base(Flame) = light_flame_small_yellow : "Small yellow flame" []
@PointClass base(Flame) = light_flame_small_white : "Small white flame" []


//
// Traps
//

@PointClass base(Targetname) = trap_flame : "Flame thrower trap" []
@PointClass base(Targetname) = trap_napalm : "Napalm launcher trap" []
@PointClass base(Targetname) = trap_tommygun : "Tommygun trap" []


//
// Ambient sounds
//

@PointClass = ambient_custom : "Custom ambient sound" [ noise(string) : "Sound file" ]

@PointClass = ambient_1wind : "Windstorm" []
@PointClass = ambient_altair2 : "Soft Blowing Wind" []
@PointClass = ambient_amb10 : "Flock of chirping birds" []
@PointClass = ambient_amb11 : "Persistent cricket" []
@PointClass = ambient_amb12 : "Running water - pipe" []
@PointClass = ambient_amb13 : "Running Water - stream" []
@PointClass = ambient_amb14 : "Running Water - something plopping" []
@PointClass = ambient_amb15 : "Underwater motor" []
@PointClass = ambient_amb16 : "Wind of approaching storm" []
@PointClass = ambient_amb17 : "Low volume wind rush - e1m1 crypt" []
@PointClass = ambient_amb18 : "Louder wind rush" []
@PointClass = ambient_amb2 : "Humming, violin sound" []
@PointClass = ambient_amb20 : "Distant Hum" []
@PointClass = ambient_amb21 : "Ocean with floating creaky pier" []
@PointClass = ambient_amb22 : "Ocean with floating creaky pier, longer" []
@PointClass = ambient_amb24 : "Pulsing underwater engine" []
@PointClass = ambient_amb25 : "Fluorescent hum" []
@PointClass = ambient_amb26 : "Electric Hum" []
@PointClass = ambient_amb3 : "Underwater Music" []
@PointClass = ambient_amb4 : "Ominous Cello Note" []
@PointClass = ambient_amb5 : "Pinging Sound, EKG" []
@PointClass = ambient_amb6 : "A Couple of Crickets" []
@PointClass = ambient_amb7 : "Underwater" []
@PointClass = ambient_amb8 : "Throb of distant machinery" []
@PointClass = ambient_amb9 : "Pulsing Machinery" []
@PointClass = ambient_brgloop : "Background Noise Loop" []
@PointClass = ambient_buzslow2 : "Slow buzzing sound" []
@PointClass = ambient_buzz2 : "noisy flou. office lights" []
@PointClass = ambient_chain1 : "Dangling Chains 1" []
@PointClass = ambient_chain2 : "Dangling chains 2" []
@PointClass = ambient_chain4 : "Dangling Chains 3" []
@PointClass = ambient_chain5 : "Dangling Chains 4" []
@PointClass = ambient_chain6 : "Dangling Chains 5" []
@PointClass = ambient_chant1lp : "Chanting Cultists Looped" []
@PointClass = ambient_chant2lp : "Chanting Cultists 2 Looped" []
@PointClass = ambient_chant3lp : "Greogorian like chanting" []
@PointClass = ambient_clock : "Grandfather clock ticking" []
@PointClass = ambient_comp_hum : "Computer background sounds" []
@PointClass = ambient_cryptlp : "Spooky crypt sound, looped" []
@PointClass = ambient_dialtone : "phone dialtone" []
@PointClass = ambient_drip : "Dripping sound" []
@PointClass = ambient_drip1 : "water dripping" []
@PointClass = ambient_drip2 : "More water dripping" []
@PointClass = ambient_drip5 : "Still more water dripping" []
@PointClass = ambient_drone : "Engine/machinery sound" []
@PointClass = ambient_elcloop1 : "Arcing tesla coil" []
@PointClass = ambient_eriedrne : "Erie droning noise" []
@PointClass = ambient_erthloop : "earthquake rumblings" []
@PointClass = ambient_flatlin2 : "patient flatlines" []
@PointClass = ambient_flouro_buzz : "Fluorescent buzzing sound" []
@PointClass = ambient_flybuzz : "buzzing flies" []
@PointClass = ambient_grglng : "gurgling, gargling  . . ." []
@PointClass = ambient_howling : "howling wolves/dogs" []
@PointClass = ambient_hrtbt : "heartbeat in Click!" []
@PointClass = ambient_icemllp : "ice melting, breaking up looped" []
@PointClass = ambient_icevio : "violent ice breakup" []
@PointClass = ambient_laugh : "Crazy laugh used in Area 15" []
@PointClass = ambient_light_buzz : "Buzzing sound from light" []
@PointClass = ambient_mfly : "Mfly" []
@PointClass = ambient_moan2lp : "more moaning, looped" []
@PointClass = ambient_mtldrn : "Metallic droning noise" []
@PointClass = ambient_qamb10 : "Quake amb10 sound" []
@PointClass = ambient_qamb11 : "Quake amb11 sound" []
@PointClass = ambient_qamb12 : "Quake amb12 sound" []
@PointClass = ambient_qamb2 : "Quake amb2 sound" []
@PointClass = ambient_qamb3 : "Quake amb3 sound" []
@PointClass = ambient_qamb4 : "Quake amb4 sound" []
@PointClass = ambient_qamb5 : "Quake amb5 sound" []
@PointClass = ambient_qamb6 : "Quake amb6 sound" []
@PointClass = ambient_qamb7 : "Quake amb7 sound" []
@PointClass = ambient_qamb8 : "Quake amb8 sound" []
@PointClass = ambient_qamb9 : "Quake amb9 sound" []
@PointClass = ambient_qsuck1 : "Quake suck1 sound" []
@PointClass = ambient_qtrain1 : "Quake train1 sound" []
@PointClass = ambient_qwindfly : "Quake windfly sound" []
@PointClass = ambient_rain2 : "Rain" []
@PointClass = ambient_sawcut : "Big saw cutting for The Lumber Mill" []
@PointClass = ambient_sawrun : "Big saw running for The Lumber Mill" []
@PointClass = ambient_sewage : "Sewage draining, flowing" []
@PointClass = ambient_sizzle : "torch burning" []
@PointClass = ambient_sizzle1 : "different torch burning" []
@PointClass = ambient_sizzle2 : "another torch burning" []
@PointClass = ambient_snakepit : "hiss of the JoJo snake pit" []
@PointClass = ambient_sngair2 : "More airy noise" []
@PointClass = ambient_suck_wind : "Wind sound" []
@PointClass = ambient_swamp1 : "Frogs croaking" []
@PointClass = ambient_swamp2 : "Frogs croaking B" []
@PointClass = ambient_torch : "yet another torch" []
@PointClass = ambient_train1 : "Train noise" []
@PointClass = ambient_underwat : "Underwater ambient noise" []
@PointClass = ambient_water : "Water noises" []
@PointClass = ambient_water1 : "more water noises" []
@PointClass = ambient_waterlap : "water lapping up to shore" []
@PointClass = ambient_wind2 : "More wind noise" []


//
// Moving things
//
@baseclass base(Targetname, Usable) = Door
[
	sounds(choices) : "Sound" : 1 =
	[
		1: "Stone"
		2: "Machine"
		3: "Stone Chain"
		4: "Screechy Metal"
	]
	wait(choices) : "Delay before close" : 4 =
	[
		-1 : "Stays open"
	]
	dmg(integer) : "Damage inflicted when blocked"
	message(string) : "Message if triggered"
]

@SolidClass base(Door) = func_door : "Basic door"
[
	speed(integer) : "Speed"
	lip(integer) : "Lip"
	health(integer) : "Health (shoot open)"
	spawnflags(flags) =
	[
		1  : "Starts Open" : 0
		4  : "Dont link" : 0
		8  : "Eye Key required" : 0
		16 : "Skull Key required" : 0
		32 : "Toggle" : 0
		64 : "Fire Key Required" : 0
		128: "Dagger Key Required" : 0
		256: "Spider Key Required" : 0
		512: "Moon Key Required" : 0
	]
	flags(choices) : "User interaction with door" : 0 =
	[
          0 : "Player manually uses the door"
          1 : "Player proximity opens the door"
	]
]

@SolidClass base(Door) = func_door_secret : "Triggered door"
[
	spawnflags(flags) =
 	[
		1 : "Open once only" : 0
		2 : "Moves left first" : 0
		4 : "Moves down first" : 0
		8 : "Not shootable" : 0
		16 : "Always shootable" : 0
		32 : "Never opens" : 0
	]
]

@SolidClass = func_wall : "Moving wall" 
[
	style(choices) : "Movement style" : 0 =
	[
		0: "Player activated, switches textures"
		1: "Automated movement"
	]	
	speed(integer) : "Speed (units per second)" : 150
	lip(integer) : "Lip remaining at end of move"
]

@SolidClass = func_changelevel : "End of level switch (Only shows in SP/COOP)" 
[
    map(string) : "The map to go to next"
]

@SolidClass = func_button : "Button"
[
	speed(integer) : "Speed" : 5
	target(target_source) : "Targetted object"
	health(integer) : "Health (shootable if > 0)"
	sounds(choices) : "Sounds" : 0 =
	[
		0: "Steam metal"
		1: "Wooden clunk"
		2: "Metallic clink"
		3: "In-out"
		4: "No sound"
	]
	wait(choices) : "Delay before reset" : 3 =
	[
		-1: "Stays pressed"
	]
	delay(integer) : "Delay before trigger"]
	style(choices) : "Stationary / Moving button" : 0 =
	[
		0: "Stationary"
		1: "Moving"
	]
	lip(integer) : "Lip remaining at end of move" : 8
	targetname(string) : "Allows a button to be triggered by other triggers"
    killtarget(string) : "kill certain entities, when used on their targetname"
	noise(string) : "Sound when pressed"
]

@SolidClass base(Targetname) = func_train : "Moving platform"
[
	sounds(choices) : "Sound" : 1 =
	[
		0: "None"
		1: "Ratchet Metal"
	]
	speed(integer) : "Speed (units per second)" : 64
	target(target_source) : "First stop target"
	dmg(integer) : "Damage on crush" : 0
]

@PointClass base(Targetname) size(16 16 16) =
	path_corner : "Moving platform stop"
[
	target(target_source) : "Next stop target"
]

@SolidClass base(Usable) = func_plat : "Elevator"
[
	style(choices) : "Movement style" : 0 =
	[
		0: "Player Activated"
		1: "Automated movement"
	]	
	speed(integer) : "Speed (units per second)" : 150
	height(integer) : "Travel altitude (can be negative)" : 0
	sounds(choices) : "Sound group" : 1 =
	[
		0: "None"
		1: "Base fast"
		2: "Chain Slow"
	]
	t_length(integer) : "t_length - ???" : 80
    t_width(integer) : "t_width - ???" : 10
	noise(string) : "Player defined sound 1 (must set both 1 & 2)"
	noise1(string) : "Player defined sound 2 (must set both 1 & 2)"
	speed(integer) : "Platform speed"
	dmg(integer) : "Damage to inflict if blocked"
	targetname(string) : "targetname"
]

//
// Triggers
//

@baseclass base(Target) = Trigger
[
	style(integer) : "Style" : 32
	killtarget(target_source) : "Kill target"
	sounds(choices) : "Sound style" : 3 =
	[
		1 : "Secret sound"
		2 : "Beep beep"
		3 : "Large switch"
		4 : "Set message to text string"
	]
	delay(integer) : "Delay before trigger" : 2
	message(string) : "Message (set sound too!)"
]

@SolidClass base(Trigger) = trigger_once : "Trigger: Activate once"
[
	spawnflags(flags) = [ 1: "Entity only" : 0 ]
]

@SolidClass base(Trigger) = trigger_multiple : "Trigger: Activate multiple" 
[
	spawnflags(flags) = [ 1: "Entity only" : 0 ]
	wait(integer) : "Delay before reset" : 10
]

@SolidClass base(Trigger) = trigger_secret : "Trigger: Secret" 
[
	spawnflags(flags) = [ 1: "Entity only" : 0 ]
	wait(integer) : "Delay before reset" : 10
]

@SolidClass base(Target, Targetname) = trigger_teleport : "Trigger teleport" 
[
	spawnflags(Flags) =
	[
		1 : "Player only" : 0
		2 : "Silent" : 0
	]
]

@PointClass base(Trigger, Targetname) = trigger_relay : "Trigger relay" []
@SolidClass base(Trigger) = trigger_monsterjump : "Trigger monster jump"
[
	speed(integer) : "Jump Speed" : 40
	height(integer) : "Jump Height" : 128
]

@SolidClass base(Trigger, Targetname) = trigger_counter : "Trigger counter" 
[
	spawnflags(flags) = [ 1: "No Message" : 0 ]
	count(integer) : "Count before activation" : 2
]

@SolidClass base(Trigger) = trigger_push : "Trigger player push"
[
	spawnflags(flags) = [ 1: "Once Only" : 0 ]
	speed(integer) : "Speed of push" : 40
]

@SolidClass base(Trigger) = trigger_hurt : "Trigger player hurt" [ dmg(integer) : "Damage" : 10 ]
@SolidClass base(Trigger) = trigger_changelevel : "Event triggers the change to the next level" [ map(string) : "Next map"]


//
// Weapons
//

@baseclass size(-16 -16 0, 16 16 56) color(0 0 200) = Weapon []

@PointClass base(Weapon) = weapon_flaregun : "Flare Gun" []
@PointClass base(Weapon) = weapon_sawedoff : "Sawed-off Shotgun" []
@PointClass base(Weapon) = weapon_tommygun : "Tommy Gun" []
@PointClass base(Weapon) = weapon_tnt : "TNT"
[
	spawnflags(flags) = 
	[
	    0: "Bundle of TNT" : 1
		1: "Case of TNT" : 0 
	]
]
@PointClass base(Weapon) = weapon_napalmlauncher : "Napalm Launcher" []
@PointClass base(Weapon) = weapon_teslacannon : "Tesla Cannon" []
@PointClass base(Weapon) = weapon_voodoodoll : "Voodoo Doll" []
@PointClass base(Weapon) = weapon_lifeleech : "Life Leech" []

@PointClass base(Weapon) size(-8 -8 0, 8 8 32) = weapon_proximity : "Proximity Detonator" []
@PointClass base(Weapon) size(-8 -8 0, 8 8 32) = weapon_remote : "Remote Detonator" []
@PointClass base(Weapon) size(-8 -8 0, 8 8 32) = weapon_spraycan : "Spray Can" []


//
// Ammunitions
//

@baseclass color(80 0 200) size(0 0 0, 32 32 56) = Ammo [ ]
@PointClass base(Ammo) = ammo_flares : "Box of Flares" []
@PointClass base(Ammo) size(-16 -16 0, 16 16 56) = ammo_shell : "Shotgun Shells"
[
	spawnflags(flags) = 
	[
	    0: "4 shells" : 0
		1: "Box of shotgun shells" : 1 
	]
]
@PointClass base(Ammo) = ammo_bullets : "Bullets"
[
	spawnflags(flags) = [ 1: "Full drum of bullets" : 1 ]
]
@PointClass base(Ammo) = ammo_gas : "Gasoline Can" []
@PointClass base(Ammo) = ammo_batteries : "Battery" []
@PointClass base(Ammo) = ammo_soul : "Trapped Soul" []


//
// Powerups
//

@PointClass size(-7 -11 -1, 7 11 19) = item_artifact_bag : "Doctors Bag" []
@PointClass size(-11 -10 -1, 4 10 19) = item_artifact_boots : "Boots of Jumping" []
@PointClass size(-7 -7 -1, 7 7 14) = item_artifact_crystal : "Crystal Ball" []
@PointClass size(-9 -13 -3, 8 13 74) = item_artifact_divingsuit : "Diving Suit" []
@PointClass size(-16 -16 -2, 16 16 54) = item_artifact_invisibility : "Cloak of Invisibility" []
@PointClass size(-4 -12 0, 2 12 30) = item_artifact_deathmask : "Death Mask" []
@PointClass size(-7 -7 0, 7 11 16) = item_artifact_reflect : "Reflective Shots" []
@PointClass size(-16 -16 -2, 16 16 54) = item_artifact_akimbo : "Guns Akimbo" []
@PointClass size(-10 -9 0, 11 9 9) = item_artifact_vision : "Beast Vision" []


//
// Armor
//

@PointClass size(-7 -18 0, 10 18 38) = item_armor_basic : "Basic Armor" []
@PointClass size(-2 -17 0, 4 19 37) = item_armor_spirit : "Spirit Armor" []
@PointClass size(-1 -18 0, 6 19 45) = item_armor_body : "Body Armor" []
@PointClass size(-7 -12 0, 7 10 37) = item_armor_fire : "Fire armor" []
@PointClass size(-16 -16 0, 16 16 56) = item_armor_super : "Super Armor" []


//
// Objects
//

@baseclass color(130 255 64) = Object
[
	spawnflags(flags) =
    [
        1 : "Solid" : 0
    ]
]

@PointClass base(Object) size(-6 -14 0, 15 10 55) = obj_body_sitting : "Dead Innocent Sitting" []
@PointClass base(Object) size(-6 -14 0, 15 10 55) = obj_body_spread : "Dead Innocent spread out" []
@PointClass base(Object) size(-40 -52 0, 44 52 90) = obj_goal : "Soccer Goal from BB8" []
@PointClass base(Object) size(-8 -9 0, 8 9 38) = obj_pot1 : "Large Vase (tile0537)" []
@PointClass base(Object) size(-17 -18 0, 18 18 41) = obj_pot2 : "Large Urn (tile1063)" []
@PointClass base(Object) size(-7 -7 0, 7 7 15) = obj_pot5 : "Small Pot (tile0604)" []
@PointClass base(Object) size(-0 -7 -27, 3 7 26) = obj_shovel : "Shovel (tile1713)" []
@PointClass base(Object) size(-6 -5 0, 5 5 52) = obj_skllstk1 : "Stake w/ 1 skull (tile0257)" []
@PointClass base(Object) size(-6 -4 0, 5 6 55) = obj_skllstk2 : "Stake w/ 3 skulls (tile0258)" []
@PointClass base(Object) size(-6 -5 0, 5 5 19) = obj_skllstk3 : "Impaled Skull (tile0685)" []
@PointClass base(Object) size(-7 -22 0, 7 22 72) = obj_tombstn1 : "Tombstone w/cross (tile0706)" []
@PointClass base(Object) size(-7 -22 0, 7 22 57) = obj_tombstn2 : "Broken Tombstone (tile0705)" []
@PointClass base(Object) size(-18 -6 0, 18 6 47) = obj_tombstn3 : "RIP Tombstone (tile0701)" []
@PointClass base(Object) size(-14 -21 -6, 7 18 45) = obj_tombstn4 : "Old Tombstone (tile0704)" []
@PointClass base(Object) size(-10 -24 0, 10 24 62) = obj_tombstn5 : "Large Cross Tombstone (tile0678)" []
@PointClass base(Object) size(-8 -16 0, 8 14 47) = obj_tombstn6 : "Wooden Cross Tombstone (tile0703)" []
@PointClass base(Object) size(-32 -41 0, 52 45 174) = obj_tree : "Dead Tree (tile0540)" []
@PointClass base(Object) size(-32 -41 0, 52 45 174) = obj_tree2 : "Live Tree (tile0541)" []
@PointClass base(Object) size(-15 -15 0, 15 15 43) = obj_world_barrel : "Wooden Barrel (tile0907)" []
@PointClass base(Object) size(-21 -12 -1, 27 23 19) = obj_world_body1 : "Dead body (tile2333)" []
@PointClass base(Object) size(-2 -2 0, 2 2 16) = obj_world_bottle2 : "Bottle (tile0759)" []
@PointClass base(Object) size(-18 -13 0, 18 13 10) = obj_world_boulder : "Boulder (tile804)" []
@PointClass base(Object) size(-6 -6 0, 6 6 24) = obj_world_bucket1 : "Waste bucket (tile0505)" []
@PointClass base(Object) size(-0 -5 -9, 2 5 10) = obj_world_calipers : "Calipers (tile1715)" []
@PointClass base(Object) size(-3 -10 0, 3 10 38) = obj_world_candlbr1 : "Short Candelabra (tile0584)" []
@PointClass base(Object) size(-5 -7 0, 5 7 54) = obj_world_candlbr2 : "Tall Candelabra (tile0580)" []
@PointClass base(Object) size(0 -10 -10, 2 10 10) = obj_world_clock : "Clock (tile1165)" []
@PointClass base(Object) size(-6 -18 0, 6 18 47) = obj_world_draven : "Draven Tombstone (tile1159)" []
@PointClass base(Object) size(-4 -12 16, 4 13 61) = obj_world_extngsh : "Fire Extinguisher (tile0658)" []
@PointClass base(Object) size(-11 -11 0, 11 11 55) = obj_world_ivdrip : "IV Drip (tile0962)" []
@PointClass base(Object) size(-8 -8 0, 9 9 18) = obj_world_jar1 : "Glass Jar w/brain (tile0075)" []
@PointClass base(Object) size(-3 -3 0, 3 3 9) = obj_world_jar2 : "Stone Jar (tile0802)" []
@PointClass base(Object) size(-6 -8 0, 8 8 63) = obj_world_lantern1 : "Garden Lantern (tile0640)" []
@PointClass base(Object) size(-8 -3 0, 9 4 7) = obj_world_leg1 : "Severed Leg (tile0682)" []
@PointClass base(Object) size(-5 -6 -13, 5 6 13) = obj_world_light1 : "Ceiling Light (tile0468)" []
@PointClass base(Object) size(-14 -14 0, 14 14 36) = obj_world_metbarrel : "Metal Barrel (tile0201)" []
@PointClass base(Object) size(-14 -14 0, 14 14 36) = obj_world_metbarrel2 : "Metal Body Barrel (tile0563)" []
@PointClass base(Object) size(-4 -4 0, 4 4 8) = obj_world_plant1 : "Potted Plant (tile1009)" []
@PointClass base(Object) size(-1 -1 8, 1 3 36) = obj_world_poker : "Poker (tile1716)" []
@PointClass base(Object) size(-17 -32 0, 17 35 43) = obj_world_pram : "Pram (tile0183)" []
@PointClass base(Object) size(-1 -4 -9, 1 6 15) = obj_world_saw : "Saw (tile1714)" []
@PointClass base(Object) size(-3 -11 0, 12 11 9) = obj_world_sinktaps : "Sink taps (tile0485)" []
@PointClass base(Object) size(-5 -5 0, 5 5 8) = obj_world_skull1 : "Skull (tile807)" []
@PointClass base(Object) size(-6 -19 0, 5 20 71) = obj_world_skullrag : "Skull on stake w/rags (tile0607)" []
@PointClass base(Object) size(-1 -5 -18, 1 5 18) = obj_world_spade : "Spade (tile1712)" []
@PointClass base(Object) size(-15 -17 0, 15 17 112) = obj_world_statue4 : "Stone Statue (tile0679)" []
@PointClass base(Object) size(-5 -5 -6, 5 5 6) = obj_world_torch : "Wall torch (tile0570)" []
@PointClass base(Object) size(-11 -16 0, 11 16 58) = obj_world_wreath1 : "Wreath (tile0575)" []
@PointClass base(Object) size(0 -49 -42, 11 50 47) = obj_world_wreath2 : "Big Wreath (tile0633)" []

//
// Sentries
//

@PointClass = sentry_detect_custom : "Custom sound" [ noise(string) : "Sound file" ]
@PointClass = sentry_detect_crypt : "Howling sound" []
@PointClass = sentry_detect_laugh : "Laugh sound" []
@PointClass = sentry_detect_switch1 : "Switch sound" []
@PointClass = sentry_detect_thunder : "Thunder sound" []


//
// Monsters
//

@baseclass color(220 0 0) = Monster 
[
    items2(choices) : "Key to drop" : 0 =
	[
		0 : "No key drop"
        1 : "Skull key"
		2 : "Eye key"
		4 : "Fire key"
        8 : "Dagger key"
        16: "Spider key"
        32: "Moon key"
	]
]

@PointClass base(Monster) size(-4 -4 -5, 5 3 7) = monster_bat : "Bat" []
@PointClass base(Monster) size(-6 -14 0, 34 14 62) = monster_blackcultist : "Black Cultist" []
@PointClass base(Monster) size(-6 -14 0, 34 14 62) = monster_bluecultist : "Blue Cultist" []
@PointClass base(Monster) size(-6 -14 0, 34 14 62) = monster_browncultist : "Brown Cultist" []
@PointClass base(Monster) size(-8 -11 0, 11 11 50) = monster_butcher : "Butcher" []
@PointClass base(Monster) size(-9 -1 -2, 6 1 2) = monster_eel : "Eel" []
@PointClass base(Monster) size(-25 -31 0, 18 31 45) = monster_gargoyle : "Flesh Gargoyle" []
@PointClass base(Monster) size(-6 -14 0, 34 14 62) = monster_greencultist : "Green Cultist" []
@PointClass base(Monster) size(-39 -17 0, 38 17 35) = monster_hellhound : "Hellhound" []
@PointClass base(Monster) size(-6 -14 0, 15 10 55) = monster_innocent : "Innocent" []
@PointClass base(Monster) size(-10 -10 -30, 10 10 29) = monster_mime : "Mime" 
[
    sounds(choices) : "Death sound" : 0 =
	    [
		    0: "None"
		    1: "I hate mimes"
            2: "Pathetic insects"
    	]
]
@PointClass base(Monster) size(-16 -16 -10, 16 16 20) = monster_minicaleb : "Mini-Caleb" []
@PointClass base(Monster) size(-13 -3 0, 13 3 6) = monster_rat : "Rat" []
@PointClass base(Monster) size(-6 -14 0, 34 14 62) = monster_redcultist : "Red Cultist" []
@PointClass base(Monster) size(-50 -62 0, 36 62 90) = monster_stonegargoyle : "Stone Gargoyle" []
@PointClass base(Monster) size(-5 -15 0, 11 15 62) = monster_zombie : "Zombie" []


//
// Misc
//

@PointClass size(-16 -16 -24, 16 16 32) = item_key : "Key"
[
	spawnflags(flags) =
	[
		1: "Skull Key" : 1
		2: "Eye Key" : 0
		4: "Fire Key" : 0
		8: "Dagger Key" : 0
		16: "Spider Key" : 0
		32: "Moon Key" : 0
	]
    noise(string) : "Sound when picked up"
]

@PointClass base(Targetname)= sound_player : "Triggered sound player"
[
	noise(string) : "Sound file"
]

@PointClass = proximity_mine : "Invisible Proximity Mine" []
@PointClass size(-16 -16 0, 16 16 32) base(Targetname) = exploding_barrel : "TNT Barrel"
[
	dmg(integer) : "Damage" : 240
]

@PointClass size(-16 -16 0, 16 16 56) = item_health : "Health giving items"
[
	spawnflags(flags) =
	[
		0 : "Medicine pouch" : 0
		1 : "Life Essence" : 1
		2 : "Life Seed" : 0
	]
]

@SolidClass = func_illusionary : "Solids can be walked through" []

@SolidClass base(Target, Targetname) = exploding_wall : "Exploding Wall"
[	
	alpha(integer) : "Opacity rate 0.0 to 1.0"
	health(integer) : "Health (shootable if > 0)"
	skin(choices) : "Skin" : 0 =
	[
		0: "Grey concrete"
		1: "Brown concrete"
		2: "Red/Brown bricks"
		3: "Rusty Metal"
		4: "Rotten Wood"
		5: "Stained Glass"
		6: "Regular Glass"
	]
	cnt(integer) : "Rubble Amount" : 12
	spawnflags(Flags) =
	[
		1 : "Trigger Break" : 0
		2 : "Regenerates" : 0
		4 : "BSP clip" : 0
		8 : "No sound" : 0
		16 : "No Rubble" : 0
		32 : "Explosive only" : 0
	]
]

@PointClass = decal_custom : "Decal" [ model(string) : "Sprite model" ]

@PointClass = hidden_exploder : "Unseen triggered explosion"
[
    noise(string) : "Sound to play when explosion occurs"
    colormap(integer) : "color (0-255) for particle explosion"
    target(target_destination) : "Target - great for chained explosions"
    wait(integer) : "Delay until explosion"
      style(choices) : "Explosion style" : 0 =
	[
	    0 : "Basic sprite explosion"
	    1 : "Medium opengl explosion"
	    2 : "Violet flash, then medium opengl explosion"
	    3 : "Red splash going up"
	    4 : "White spherical pulse"
	    5 : "Large opengl explosion"
	    6 : "Particle explosion"
	]
]

@SolidClass = func_transparent : "Transparent wall"
[
      alpha(integer) : "Opacity rate 0.0 to 1.0"
      solid(choices) : "Solid / Non-solid" : 1 =
      [
          0 : "Non-solid"
          1 : "Solid"
	  ]
      style(choices) : "Show up in SP / DM / CTF" : 0 =
      [
          0 : "Show up in all game modes"
          1 : "Show up in Single player only"
          2 : "Show up in Deathmatch only"
          3 : "Show up in CTF only"
	  ]
]
